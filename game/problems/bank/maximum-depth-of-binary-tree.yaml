id: "10"
slug: maximum-depth-of-binary-tree
title: Maximum Depth of Binary Tree
difficulty: Easy
tags:
  - Tree
  - DFS
  - Recursion
url: https://leetcode.com/problems/maximum-depth-of-binary-tree/
text: |
  Given the root of a binary tree, return its maximum depth.
  A binary tree's maximum depth is the number of nodes along the longest path
  from the root node down to the farthest leaf node.

  Example 1:
  Input: root = [3,9,20,null,null,15,7]
  Output: 3

  Example 2:
  Input: root = []
  Output: 0

  Example 3:
  Input: root = [1,2]
  Output: 2

  Constraints:
  • The number of nodes is in the range [0, 10^4]
  • -100 <= Node.val <= 100
snippets:
  - "    def __init__(self, val=0, left=None, right=None):"
  - "        self.val = val"
  - "        self.left = left"
  - "        self.right = right"
  - "def max_depth(root: Optional[TreeNode]) -> int:"
  - "    if not root:"
  - "        return 0"
  - "    return 1 + max(max_depth(root.left), max_depth(root.right))"