id: "13"
slug: remove-duplicates-from-sorted-array
title: Remove Duplicates from Sorted Array
difficulty: Easy
tags:
  - Array
  - Two Pointers
url: https://leetcode.com/problems/remove-duplicates-from-sorted-array/
text: |
  Given an integer array nums sorted in non-decreasing order, remove the duplicates
  in-place such that each unique element appears only once. The relative order of
  the elements should be kept the same. Then return the number of unique elements k.
  It must be done in-place with O(1) extra memory.

  Example 1:
  Input: nums = [1,1,2]
  Output: k = 2, nums = [1,2,_]

  Example 2:
  Input: nums = [0,0,1,1,1,2,2,3,3,4]
  Output: k = 5, nums = [0,1,2,3,4,_,_,_,_,_]

  Example 3:
  Input: nums = [1,2,3]
  Output: k = 3, nums = [1,2,3]

  Constraints:
  • 1 <= nums.length <= 3 * 10^4
  • -100 <= nums[i] <= 100
  • nums is sorted in non-decreasing order
snippets:
  - "def remove_duplicates(nums: list[int]) -> int:"
  - "    if not nums:"
  - "        return 0"
  - "    k = 1"
  - "    for i in range(1, len(nums)):"
  - "        if nums[i] != nums[k - 1]:"
  - "            nums[k] = nums[i]"
  - "            k += 1"
  - "    return k"