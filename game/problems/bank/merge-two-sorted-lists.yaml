# game/problems/bank/merge-two-sorted-lists.yaml
id: "4"
slug: merge-two-sorted-lists
title: Merge Two Sorted Lists
difficulty: Easy
tags:
  - Linked List
  - Recursion
url: https://leetcode.com/problems/merge-two-sorted-lists/
text: |
  You are given the heads of two sorted linked lists list1 and list2.
  Merge the two lists into one sorted list and return the head of the merged list.

  Example 1:
    Input: list1 = [1,2,4], list2 = [1,3,4]
    Output: [1,1,2,3,4,4]

  Example 2:
    Input: list1 = [], list2 = []
    Output: []

  Example 3:
    Input: list1 = [], list2 = [0]
    Output: [0]

  Constraints:
  • The number of nodes in both lists is in the range [0, 50].
  • -100 <= Node.val <= 100
  • Both list1 and list2 are sorted in non-decreasing order.
snippets:
  - "def mergeTwoLists(l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:"
  - "    dummy = ListNode()"
  - "    tail = dummy"
  - "    while l1 and l2:"
  - "        if l1.val < l2.val:"
  - "            tail.next = l1"
  - "            l1 = l1.next"
  - "        else:"
  - "            tail.next = l2"
  - "            l2 = l2.next"
  - "        tail = tail.next"
  - "    tail.next = l1 or l2"
  - "    return dummy.next"